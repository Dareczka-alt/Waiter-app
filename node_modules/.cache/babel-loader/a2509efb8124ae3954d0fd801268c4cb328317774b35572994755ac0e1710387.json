{"ast":null,"code":"import initialState from './initialState';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n//selectors\nexport const getAllTables = state => state.tables;\n\n//create action names\n\nconst createActionName = actionName => `app/tables/${actionName}`;\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\n\n//action creators\nexport const updateTables = payload => ({\n  type: UPDATE_TABLES,\n  payload\n});\nexport const fetchTables = () => {\n  return dispatch => {\n    fetch('app.json').then(res => res.json()).then(tables => dispatch(updateTables(tables)));\n  };\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_TABLES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer, initialState, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f));\nexport default store;","map":{"version":3,"names":["initialState","createStore","applyMiddleware","compose","thunk","getAllTables","state","tables","createActionName","actionName","UPDATE_TABLES","updateTables","payload","type","fetchTables","dispatch","fetch","then","res","json","reducer","action","store","window","__REDUX_DEVTOOLS_EXTENSION__","f"],"sources":["C:/Users/asasa/OneDrive/Pulpit/waiter-app/src/redux/store.js"],"sourcesContent":["import initialState from './initialState'\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//selectors\r\nexport const getAllTables = (state) => state.tables;\r\n\r\n\r\n//create action names\r\n\r\nconst createActionName = actionName => `app/tables/${actionName}`;\r\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\r\n\r\n//action creators\r\nexport const updateTables = payload => ({ type: UPDATE_TABLES, payload });\r\n\r\nexport const fetchTables = () => {\r\n  return (dispatch) => {\r\n    fetch('app.json')\r\n      .then(res => res.json())\r\n      .then(tables => dispatch(updateTables(tables)));\r\n  };\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_TABLES:\r\n      return [...action.payload]\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n  )\r\n);\r\n\r\nexport default store;"],"mappings":"AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,KAAK,MAAM,aAAa;;AAE/B;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAKA,KAAK,CAACC,MAAM;;AAGnD;;AAEA,MAAMC,gBAAgB,GAAGC,UAAU,IAAK,cAAaA,UAAW,EAAC;AACjE,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,eAAe,CAAC;;AAEvD;AACA,OAAO,MAAMG,YAAY,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEH,aAAa;EAAEE;AAAQ,CAAC,CAAC;AAEzE,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAQC,QAAQ,IAAK;IACnBC,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACV,MAAM,IAAIQ,QAAQ,CAACJ,YAAY,CAACJ,MAAM,CAAC,CAAC,CAAC;EACnD,CAAC;AACH,CAAC;AAED,MAAMa,OAAO,GAAGA,CAACd,KAAK,EAAEe,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACR,IAAI;IACjB,KAAKH,aAAa;MAChB,OAAO,CAAC,GAAGW,MAAM,CAACT,OAAO,CAAC;IAE5B;MACE,OAAON,KAAK;EAChB;AAGF,CAAC;AAED,MAAMgB,KAAK,GAAGrB,WAAW,CACvBmB,OAAO,EACPpB,YAAY,EACZG,OAAO,CACLD,eAAe,CAACE,KAAK,CAAC,EACtBmB,MAAM,CAACC,4BAA4B,GAAGD,MAAM,CAACC,4BAA4B,CAAC,CAAC,GAAGC,CAAC,IAAIA,CACrF,CACF,CAAC;AAED,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}