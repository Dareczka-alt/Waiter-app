{"ast":null,"code":"//selectors\nexport const getAllTables = state => state.tables;\n\n// actions\nconst createActionName = actionName => `app/tables/${actionName}`;\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\nconst UPDATE_TABLE_STATUS = createActionName('UPDATE_TABLE_STATUS');\nconst UPDATE_TABLE_BILL = createActionName('UPDATE_TABLE_BILL');\nconst UPDATE_TABLE_PEOPLE_MAX = createActionName('UPDATE_TABLE_PEOPLE_MAX');\nconst UPDATE_TABLE_PEOPLE_SITTING = createActionName('UPDATE_TABLE_PEOPLE_SITTING');\nexport const updateTables = payload => ({\n  type: UPDATE_TABLES,\n  payload\n});\nexport const updateTableStatus = payload => ({\n  type: UPDATE_TABLE_STATUS,\n  payload\n});\nexport const updateTablePeopleMax = payload => ({\n  type: UPDATE_TABLE_PEOPLE_MAX,\n  payload\n});\nexport const updateTablePeopleSitting = payload => ({\n  type: UPDATE_TABLE_PEOPLE_SITTING,\n  payload\n});\nexport const updateTableBill = payload => ({\n  type: UPDATE_TABLE_BILL,\n  payload\n});\nexport const fetchTables = () => {\n  return dispatch => {\n    fetch('http://localhost:3131/api/tables').then(res => res.json()).then(tables => dispatch(updateTables(tables)));\n  };\n};\nexport const requestTableStatus = newStatus => {\n  return dispatch => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newStatus)\n    };\n    fetch('http://localhost:3131/tables', options).then(() => dispatch(updateTableStatus(newStatus)));\n  };\n};\nexport const requestTablePeopleSitting = newPeopleSitting => {\n  return dispatch => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPeopleSitting)\n    };\n    fetch('http://localhost:3131/tables', options).then(() => dispatch(updateTablePeopleSitting(newPeopleSitting)));\n  };\n};\nexport const requestPeopleMax = newPeopleMax => {\n  return dispatch => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPeopleMax)\n    };\n    fetch('http://localhost:3131/tables', options).then(() => dispatch(updateTablePeopleMax(newPeopleMax)));\n  };\n};\nexport const requestTableBill = newBill => {\n  return dispatch => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBill)\n    };\n    fetch('http://localhost:3131/tables', options).then(() => dispatch(updateTableBill(newBill)));\n  };\n};\n\n// action creators\nconst tablesReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case UPDATE_TABLES:\n      return [...action.payload];\n    case UPDATE_TABLE_STATUS:\n      return [...statePart.map(table => table.status === action.payload)];\n    case UPDATE_TABLE_PEOPLE_SITTING:\n      return [...statePart.map(table => table.peopleSitting === action.payload)];\n    case UPDATE_TABLE_PEOPLE_MAX:\n      return [...statePart.map(table => table.peopleMax === action.payload)];\n    case UPDATE_TABLE_BILL:\n      return [...statePart.map(table => table.bill === action.payload)];\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default tablesReducer;","map":{"version":3,"names":["getAllTables","state","tables","createActionName","actionName","UPDATE_TABLES","UPDATE_TABLE_STATUS","UPDATE_TABLE_BILL","UPDATE_TABLE_PEOPLE_MAX","UPDATE_TABLE_PEOPLE_SITTING","updateTables","payload","type","updateTableStatus","updateTablePeopleMax","updateTablePeopleSitting","updateTableBill","fetchTables","dispatch","fetch","then","res","json","requestTableStatus","newStatus","options","method","headers","body","JSON","stringify","requestTablePeopleSitting","newPeopleSitting","requestPeopleMax","newPeopleMax","requestTableBill","newBill","tablesReducer","statePart","action","map","table","status","peopleSitting","peopleMax","bill"],"sources":["C:/Users/asasa/OneDrive/Pulpit/waiter-app/src/redux/tablesRedux.js"],"sourcesContent":["//selectors\r\nexport const getAllTables = (state) => state.tables;\r\n\r\n\r\n// actions\r\nconst createActionName = actionName => `app/tables/${actionName}`;\r\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\r\nconst UPDATE_TABLE_STATUS = createActionName('UPDATE_TABLE_STATUS');\r\nconst UPDATE_TABLE_BILL = createActionName('UPDATE_TABLE_BILL');\r\nconst UPDATE_TABLE_PEOPLE_MAX = createActionName('UPDATE_TABLE_PEOPLE_MAX');\r\nconst UPDATE_TABLE_PEOPLE_SITTING = createActionName('UPDATE_TABLE_PEOPLE_SITTING');\r\n\r\n\r\n\r\nexport const updateTables = payload => ({ type: UPDATE_TABLES, payload });\r\nexport const updateTableStatus = payload => ({ type: UPDATE_TABLE_STATUS, payload });\r\nexport const updateTablePeopleMax = payload => ({ type: UPDATE_TABLE_PEOPLE_MAX, payload });\r\nexport const updateTablePeopleSitting = payload => ({ type: UPDATE_TABLE_PEOPLE_SITTING, payload });\r\nexport const updateTableBill = payload => ({ type: UPDATE_TABLE_BILL, payload });\r\n\r\nexport const fetchTables = () => {\r\n  return (dispatch) => {\r\n    fetch('http://localhost:3131/api/tables')\r\n      .then(res => res.json())\r\n      .then(tables => dispatch(updateTables(tables)));\r\n  };\r\n};\r\n\r\nexport const requestTableStatus = (newStatus) => {\r\n  return (dispatch) => {\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newStatus),\r\n    };\r\n\r\n    fetch('http://localhost:3131/tables', options)\r\n      .then(() => dispatch(updateTableStatus(newStatus)))\r\n  }\r\n}\r\nexport const requestTablePeopleSitting = (newPeopleSitting) => {\r\n  return (dispatch) => {\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newPeopleSitting),\r\n    };\r\n\r\n    fetch('http://localhost:3131/tables', options)\r\n      .then(() => dispatch(updateTablePeopleSitting(newPeopleSitting)))\r\n  }\r\n}\r\nexport const requestPeopleMax = (newPeopleMax) => {\r\n  return (dispatch) => {\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newPeopleMax),\r\n    };\r\n\r\n    fetch('http://localhost:3131/tables', options)\r\n      .then(() => dispatch(updateTablePeopleMax(newPeopleMax)))\r\n  }\r\n}\r\nexport const requestTableBill = (newBill) => {\r\n  return (dispatch) => {\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newBill),\r\n    };\r\n\r\n    fetch('http://localhost:3131/tables', options)\r\n      .then(() => dispatch(updateTableBill(newBill)))\r\n  }\r\n}\r\n\r\n\r\n// action creators\r\nconst tablesReducer = (statePart = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_TABLES:\r\n      return [...action.payload];\r\n    case UPDATE_TABLE_STATUS:\r\n      return [...statePart.map(table => table.status === action.payload)];\r\n    case UPDATE_TABLE_PEOPLE_SITTING:\r\n      return [...statePart.map(table => table.peopleSitting === action.payload)];\r\n    case UPDATE_TABLE_PEOPLE_MAX:\r\n      return [...statePart.map(table => table.peopleMax === action.payload)];\r\n    case UPDATE_TABLE_BILL:\r\n      return [...statePart.map(table => table.bill === action.payload)];\r\n\r\n    default:\r\n      return statePart;\r\n  };\r\n};\r\nexport default tablesReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}