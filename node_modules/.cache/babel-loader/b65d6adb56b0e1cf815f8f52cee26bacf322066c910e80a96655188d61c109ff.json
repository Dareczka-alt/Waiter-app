{"ast":null,"code":"import initialState from './initialState';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n//selectors\nexport const getAllTables = state => state.tables;\nexport const getTableById = ({\n  tables\n}, tableId) => tables.find(table => table.id === tableId);\n\n//action creators\nexport const updateTables = payload => ({\n  type: UPDATE_TABLES,\n  payload\n});\nconst createActionName = actionName => `app/tables/${actionName}`;\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\nexport const fetchTables = dispatch => {\n  fetch('http://localhost:3131/api/tables').then(res => res.json()).then(tables => dispatch(updateTables(tables)));\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_TABLES:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"names":["initialState","createStore","applyMiddleware","compose","thunk","getAllTables","state","tables","getTableById","tableId","find","table","id","updateTables","payload","type","UPDATE_TABLES","createActionName","actionName","fetchTables","dispatch","fetch","then","res","json","reducer","action","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"sources":["C:/Users/asasa/OneDrive/Pulpit/waiter-app/src/redux/store.js"],"sourcesContent":["import initialState from './initialState'\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//selectors\r\nexport const getAllTables = (state) => state.tables;\r\nexport const getTableById = ({ tables }, tableId) => tables.find(table => table.id === tableId)\r\n\r\n//action creators\r\nexport const updateTables = payload => ({ type: UPDATE_TABLES, payload });\r\n\r\nconst createActionName = actionName => `app/tables/${actionName}`;\r\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\r\n\r\nexport const fetchTables = dispatch => {\r\n  fetch('http://localhost:3131/api/tables')\r\n    .then(res => res.json())\r\n    .then(tables => dispatch(updateTables(tables)))\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_TABLES:\r\n      return [...action.payload]\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;"],"mappings":"AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,KAAK,MAAM,aAAa;;AAE/B;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAKA,KAAK,CAACC,MAAM;AACnD,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAED;AAAO,CAAC,EAAEE,OAAO,KAAKF,MAAM,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKH,OAAO,CAAC;;AAE/F;AACA,OAAO,MAAMI,YAAY,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEC,aAAa;EAAEF;AAAQ,CAAC,CAAC;AAEzE,MAAMG,gBAAgB,GAAGC,UAAU,IAAK,cAAaA,UAAW,EAAC;AACjE,MAAMF,aAAa,GAAGC,gBAAgB,CAAC,eAAe,CAAC;AAEvD,OAAO,MAAME,WAAW,GAAGC,QAAQ,IAAI;EACrCC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACf,MAAM,IAAIa,QAAQ,CAACP,YAAY,CAACN,MAAM,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,MAAMkB,OAAO,GAAGA,CAACnB,KAAK,EAAEoB,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACX,IAAI;IACjB,KAAKC,aAAa;MAChB,OAAO,CAAC,GAAGU,MAAM,CAACZ,OAAO,CAAC;IAE5B;MACE,OAAOR,KAAK;EAChB;AAGF,CAAC;AAED,MAAMqB,KAAK,GAAG1B,WAAW,CACvBwB,OAAO,EACPzB,YAAY,EACZ4B,MAAM,CAACC,4BAA4B,IAAID,MAAM,CAACC,4BAA4B,CAAC,CAC7E,CAAC;AAED,eAAeF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}