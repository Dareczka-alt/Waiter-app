{"ast":null,"code":"import API_URL from './../config';\n\n//selectors\nexport const getAllTables = state => state.tables;\nexport const getTableById = ({\n  tables\n}, tableId) => tables.find(table => table.id === tableId);\n\n// actions\nconst createActionName = actionName => `app/tables/${actionName}`;\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\nconst UPDATE_TABLE_PARAMS = createActionName('UPDATE_TABLE_PARAMS');\nexport const updateTables = payload => ({\n  type: UPDATE_TABLES,\n  payload\n});\nexport const updateTableParams = payload => ({\n  type: UPDATE_TABLE_PARAMS,\n  payload\n});\nexport const fetchTables = () => {\n  return dispatch => {\n    fetch('http://localhost:3131/api/tables').then(res => res.json()).then(tables => dispatch(updateTables(tables)));\n  };\n};\nexport const requestTableParams = newParams => {\n  return dispatch => {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...newParams\n      })\n    };\n    fetch(`http://localhost:3131/tables/${newParams.id}`, options).then(() => dispatch(updateTableParams(newParams)));\n  };\n};\n\n// action creators\nconst tablesReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case UPDATE_TABLES:\n      return [...action.payload];\n    case UPDATE_TABLE_PARAMS:\n      return statePart.map(table => table.id === action.payload.id ? {\n        ...table,\n        ...action.payload\n      } : table);\n      ;\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default tablesReducer;","map":{"version":3,"names":["API_URL","getAllTables","state","tables","getTableById","tableId","find","table","id","createActionName","actionName","UPDATE_TABLES","UPDATE_TABLE_PARAMS","updateTables","payload","type","updateTableParams","fetchTables","dispatch","fetch","then","res","json","requestTableParams","newParams","options","method","headers","body","JSON","stringify","tablesReducer","statePart","action","map"],"sources":["C:/Users/asasa/OneDrive/Pulpit/waiter-app/src/redux/tablesRedux.js"],"sourcesContent":["import API_URL from './../config'\r\n\r\n//selectors\r\nexport const getAllTables = (state) => state.tables;\r\nexport const getTableById = ({ tables }, tableId) => tables.find(table => table.id === tableId);\r\n\r\n\r\n// actions\r\nconst createActionName = actionName => `app/tables/${actionName}`;\r\nconst UPDATE_TABLES = createActionName('UPDATE_TABLES');\r\nconst UPDATE_TABLE_PARAMS = createActionName('UPDATE_TABLE_PARAMS');\r\n\r\n\r\n\r\n\r\nexport const updateTables = payload => ({ type: UPDATE_TABLES, payload });\r\nexport const updateTableParams = payload => ({ type: UPDATE_TABLE_PARAMS, payload });\r\n\r\n\r\nexport const fetchTables = () => {\r\n  return (dispatch) => {\r\n    fetch('http://localhost:3131/api/tables')\r\n      .then(res => res.json())\r\n      .then(tables => dispatch(updateTables(tables)));\r\n  };\r\n};\r\n\r\nexport const requestTableParams = (newParams) => {\r\n  return (dispatch) => {\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ ...newParams }),\r\n    };\r\n\r\n    fetch(`http://localhost:3131/tables/${newParams.id}`, options)\r\n      .then(() => dispatch(updateTableParams(newParams)))\r\n  }\r\n}\r\n\r\n\r\n\r\n// action creators\r\nconst tablesReducer = (statePart = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_TABLES:\r\n      return [...action.payload];\r\n    case UPDATE_TABLE_PARAMS:\r\n      return statePart.map((table) => table.id === action.payload.id ? { ...table, ...action.payload } : table);\r\n      ;\r\n\r\n    default:\r\n      return statePart;\r\n  };\r\n};\r\nexport default tablesReducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,aAAa;;AAEjC;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAKA,KAAK,CAACC,MAAM;AACnD,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAED;AAAO,CAAC,EAAEE,OAAO,KAAKF,MAAM,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKH,OAAO,CAAC;;AAG/F;AACA,MAAMI,gBAAgB,GAAGC,UAAU,IAAK,cAAaA,UAAW,EAAC;AACjE,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,eAAe,CAAC;AACvD,MAAMG,mBAAmB,GAAGH,gBAAgB,CAAC,qBAAqB,CAAC;AAKnE,OAAO,MAAMI,YAAY,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEJ,aAAa;EAAEG;AAAQ,CAAC,CAAC;AACzE,OAAO,MAAME,iBAAiB,GAAGF,OAAO,KAAK;EAAEC,IAAI,EAAEH,mBAAmB;EAAEE;AAAQ,CAAC,CAAC;AAGpF,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAQC,QAAQ,IAAK;IACnBC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACjB,MAAM,IAAIe,QAAQ,CAACL,YAAY,CAACV,MAAM,CAAC,CAAC,CAAC;EACnD,CAAC;AACH,CAAC;AAED,OAAO,MAAMoB,kBAAkB,GAAIC,SAAS,IAAK;EAC/C,OAAQN,QAAQ,IAAK;IACnB,MAAMO,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,GAAGN;MAAU,CAAC;IACvC,CAAC;IAEDL,KAAK,CAAE,gCAA+BK,SAAS,CAAChB,EAAG,EAAC,EAAEiB,OAAO,CAAC,CAC3DL,IAAI,CAAC,MAAMF,QAAQ,CAACF,iBAAiB,CAACQ,SAAS,CAAC,CAAC,CAAC;EACvD,CAAC;AACH,CAAC;;AAID;AACA,MAAMO,aAAa,GAAGA,CAACC,SAAS,GAAG,EAAE,EAAEC,MAAM,KAAK;EAChD,QAAQA,MAAM,CAAClB,IAAI;IACjB,KAAKJ,aAAa;MAChB,OAAO,CAAC,GAAGsB,MAAM,CAACnB,OAAO,CAAC;IAC5B,KAAKF,mBAAmB;MACtB,OAAOoB,SAAS,CAACE,GAAG,CAAE3B,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKyB,MAAM,CAACnB,OAAO,CAACN,EAAE,GAAG;QAAE,GAAGD,KAAK;QAAE,GAAG0B,MAAM,CAACnB;MAAQ,CAAC,GAAGP,KAAK,CAAC;MACzG;IAEF;MACE,OAAOyB,SAAS;EACpB;EAAC;AACH,CAAC;AACD,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}